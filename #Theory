
‘’’
#Volumes & Bind Mounts
#docker run -v /app/data....   =======>   Anonymous Volume (This first example would create an anonymous volume since you don't assign any name.)
#
#docker run -v data:/app/data... ===========> Named Volume (The second example would create a named volume. since you do assign a name.)
#
#docker run -v /path/to/code:/app/code...  ============> Bind Mount (And in the third example, the name is actually. an absolute path to a folder on your host machine and therefore this is then a bind mount.)
#
#
#docker run -d -p 3000:80 --rm --name volumecon -v sono:/app/feedback -v "/media/mohd/Devops/Zapbuild/Docker/data-volumes-02-added-dockerfile/data-volumes-02-added-dockerfile:/app" -v /app/node_modules volumeimg
#
#
#


##################################################################################################################################################################################################################################################################################################################################################################################################
Anonymous
that anonymous volumes are removed automatically, when a container is removed.

This happens when you start / run a container with the --rm option.

If you start a container without that option, the anonymous volume would NOT be removed, even if you remove the container (with docker rm ...).

Still, if you then re-create and re-run the container (i.e. you run docker run ... again), a new anonymous volume will be created. So even though the anonymous volume wasn't removed automatically, it'll also not be helpful because a different anonymous volume is attached the next time the container starts (i.e. you removed the old container and run a new one).

Now you just start piling up a bunch of unused anonymous volumes - you can clear them via docker volume rm VOL_NAME or docker volume prune.


##################################################################################################################################################################################################################################################################################################################################################################################################
Named Volume 

Docker-named volumes are a way to persist data in Docker containers. They allow you to create a named volume and mount it to a container so that the data stored in the volume is preserved even if the container is stopped or removed.



##################################################################################################################################################################################################################################################################################################################################################################################################
Bind Mount 

bind mount allows us to mount a file system or a subset of a file system in two places at once. They can be used for various reasons when parts of the file system need to be made available in different places. ‘’’

##################################################################################################################################################################################################################################################################################################################################################################################################
